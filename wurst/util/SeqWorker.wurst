package SeqWorker
import public ClosureTimers
import ErrorHandling

public function doSeq(int timesPerCycle, SeqCallback cb)
	if cb == null or cb.done
		error("wtf")
	cb.executionsPerCycle = timesPerCycle
	nullTimer(() -> cb.execute())


public abstract class SeqCallback
	int executions = 0
	int executionsPerCycle = 1
	boolean done = false
	int customData = 0

	function execute()
		executions++
		while not done and executions <= executionsPerCycle
			onExeute(this)
			executions++
		if not done
			executions = 0
			nullTimer(() -> execute())

	function doStep()
		onExeute(this)

	function terminate()
		if not done
			done = true
			destroy this

	abstract function onExeute(SeqCallback cb)

	

