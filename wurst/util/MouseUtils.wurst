package MouseUtils
import ClosureEvents
import GameTimer

constant real MOUSE_MOVE_THRESH = 0.18

// Tuple containing mouse status. Use 'isMoving()' to test if the mouse is currently moving (accurate within threshold)
public tuple mouseTuple(boolean left, boolean right, boolean middle, boolean isMoving, vec2 position, real velocity, real updateTimestamp, real lastMoveTimestamp)

public function initMouseTuple() returns mouseTuple
	return mouseTuple(false, false, false, false, vec2(0., 0.), 0., getElapsedGameTime(), 0.00)

mouseTuple array mouseStatuses

public function player.getMouseStatus() returns mouseTuple
	let playerId = this.getId()
	let timestamp = getElapsedGameTime()
	var mouseStatus = mouseStatuses[playerId]

	if (mouseStatus.isMoving)
		if (timestamp - mouseStatus.lastMoveTimestamp >= MOUSE_MOVE_THRESH)
			mouseStatus.isMoving = false
			mouseStatus.velocity = 0.

	mouseStatuses[playerId] = mouseStatus

	return mouseStatus

EventListener firstMouseListener = null

public function addMouseListener(EventListener listener) returns EventListener
	if firstMouseListener != null
		firstMouseListener.prev = listener
		listener.next = firstMouseListener

	firstMouseListener = listener
	return listener

public function removeMouseListener(EventListener listener)
	if firstMouseListener == listener
		firstMouseListener = null
	destroy listener

function onMouseEvent()
	var mouseStatus = GetTriggerPlayer().getMouseStatus()
	let eventId = GetTriggerEventId()
	let mouseButton = BlzGetTriggerPlayerMouseButton()
	let timestamp = getElapsedGameTime()
	let position = vec2(BlzGetTriggerPlayerMouseX(), BlzGetTriggerPlayerMouseY())

	mouseStatus.updateTimestamp = timestamp

	if eventId == EVENT_PLAYER_MOUSE_DOWN
		if mouseButton == MOUSE_BUTTON_TYPE_LEFT
			mouseStatus.left = true
		else if mouseButton == MOUSE_BUTTON_TYPE_RIGHT
			mouseStatus.right = true
		else if mouseButton == MOUSE_BUTTON_TYPE_MIDDLE
			mouseStatus.middle = true 
	else if eventId == EVENT_PLAYER_MOUSE_UP
		if mouseButton == MOUSE_BUTTON_TYPE_LEFT
			mouseStatus.left = false
		else if mouseButton == MOUSE_BUTTON_TYPE_RIGHT
			mouseStatus.right = false
		else if mouseButton == MOUSE_BUTTON_TYPE_MIDDLE
			mouseStatus.middle = false 
	else if eventId == EVENT_PLAYER_MOUSE_MOVE
		if (mouseStatus.isMoving)
			// r = d/t
			let distance = position.distanceTo(mouseStatus.position)
			let time = timestamp - mouseStatus.lastMoveTimestamp
			mouseStatus.velocity = distance/time
		mouseStatus.position = position
		mouseStatus.lastMoveTimestamp = timestamp
		mouseStatus.isMoving = true

	mouseStatuses[GetTriggerPlayer().getId()] = mouseStatus

	var listener = firstMouseListener
	while listener != null
		listener.onEvent()
		listener = listener.next

init
	for i = 0 to bj_MAX_PLAYER_SLOTS
		mouseStatuses[i] = initMouseTuple()

	EventListener.add(EVENT_PLAYER_MOUSE_DOWN, () -> onMouseEvent())
	EventListener.add(EVENT_PLAYER_MOUSE_UP, () -> onMouseEvent())
	EventListener.add(EVENT_PLAYER_MOUSE_MOVE, () -> onMouseEvent())

	EventListener.add(EVENT_PLAYER_LEAVE) ->
		mouseStatuses[GetTriggerPlayer().getId()] = initMouseTuple()
			



		
		