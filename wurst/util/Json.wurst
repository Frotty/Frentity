package Json
import HashMap
import LinkedList
import Scanner
import ErrorHandling

constant SIGN_EQUAL = "."
constant SIGN_COMMA = "_"
constant JSON_HEADER = "JSON"

public class Property
	string name
	string value

	construct(string name, string value)
		this.name = name
		this.value = value

	function toString() returns string
		return name + SIGN_EQUAL + value

public class Json
	HashMap<int, Property> properties = new HashMap<int, Property>()
	LinkedList<Property> plist = new LinkedList<Property>()

	function addProperty(Property p)
		plist.add(p)
		properties.put(p.name.getHash(), p)

	function fromString(string json)
		let sc = new Scanner(json, SIGN_COMMA, SIGN_EQUAL)
		let header = sc.next()
		if header == JSON_HEADER
			while sc.hasNext()
				addProperty(new Property(sc.next(), sc.next()))
		else
			error("trying to load non-json file (missing header)")
		destroy sc

	function getProperty(string key) returns Property
		return properties.get(key.getHash())

	function getReal(string key) returns real
		return getInt(key).toReal()

	function getInt(string key) returns int
		return getString(key).toInt()

	function getString(string key) returns string
		return properties.get(key.getHash()).value

	function toString() returns string
		var s = JSON_HEADER + SIGN_COMMA
		for p in plist
			let ps = p.toString()
			if ps.length() > 0
				s += ps + SIGN_COMMA
		s.substring(0, s.length()-1)
		return s

	ondestroy
		destroy properties
		for p from plist.staticItr()
			destroy p
		destroy plist