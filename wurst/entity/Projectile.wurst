package Projectile
import public Fx2Entity
import ClosureForGroups
import GroupUtils

public interface OnHitListener
	function run(unit target)

public interface OnEndListener
	function run()

public class Projectile extends Fx2Entity
	// Angles
	private angle xyAngle
	private vec3 startpos

	private var timed = false
	private var ranged = false
	private group hitGroup = null

	// Moving Speed
	private var speed = 0.
	private var acc = 1.0
	protected var dist = 0.
	private var maxDist = 0.
	protected var time = 0.
	private var maxTime = 0.

	private Entity target = null
	private OnHitListener onHit = null
	private OnEndListener onEnd = null

	construct(vec3 pos, real radius, player owner, angle xyAngle, string fxpath)
		super(owner, pos, radius, xyAngle, fxpath)
		startpos = pos
		setXYAngle(xyAngle)
		sleeps = false
		gravity = 0.

	function onHit(OnHitListener listener)
		hitGroup = getGroup()
		this.onHit = listener

	function onEnd(OnEndListener listener)
		this.onEnd = listener

	function setTargetted(Entity target)
		this.target = target

	function setRanged(real maxDistance)
		this.maxDist = maxDistance*maxDistance
		ranged = true

	function setTimed(real lifespan)
		this.maxTime = lifespan
		timed = true

	function setSpeed(real speed)
		this.speed = speed
		setVel(vec3(xyAngle.cos()*speed, xyAngle.sin()*speed, 0.))

	function setAcc(real factor)
		this.acc = factor

	function getSpeed() returns real
		return speed

	function setXYAngle(angle xyA)
		this.xyAngle = xyA
		fx.eff.setYaw(xyA)

	function getXYAngle() returns angle
		return xyAngle

	function setZAngle(angle zA)
		fx.eff.setPitch(zA)

	override function update()
		vel *= acc
		super.update()
		if not done
			if onHit != null
				forUnitsInRange(pos.toVec2(), radius) target ->
					if not hitGroup.contains(target)
						hitGroup.addUnit(target)
						onHit.run(target)
			if timed
				time += ANIMATION_PERIOD
				if time >= maxTime
					terminate()
			if ranged
				if startpos.distanceToSq(pos) > maxDist
					terminate()
			if target != null
				if pos.toVec2().distanceToSq(target.getPos().toVec2()) < radius2
					terminate()

	override function terminate()
		if onEnd != null
			onEnd.run()
		super.terminate()

	ondestroy
		if onEnd != null
			hitGroup.destr()
			destroy onEnd
		if onHit != null
			destroy onHit